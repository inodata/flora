parameters:
#    inodata_flora.example.class: Inodata\FloraBundle\Example

#services:
#    inodata_flora.example:
#        class: %inodata_flora.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]

services:
    inodata_payment_contact_form:
        class: Inodata\FloraBundle\Form\Type\PaymentContactType
        tags:
            - { name: form.type }
    inodata_address_form:
        class: Inodata\FloraBundle\Form\Type\AddressType
        tags:
            - { name: form.type }
    inodata_order_products_form:
        class: Inodata\FloraBundle\Form\Type\OrderProductsType
        tags:
            - { name: form.type }
    inodata_mx_states_type:
        class: Inodata\FloraBundle\Form\Type\MxStatesType
        tags:
            - { name: form.type }
    inodata_emp_positions_type:
        class: Inodata\FloraBundle\Form\Type\EmpPositionsType
        tags:
            - { name: form.type }
    admin.distribution:
        class: Inodata\FloraBundle\Admin\DistributionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Pedidos, label: Reparto }
        arguments: [ null, Inodata\FloraBundle\Entity\Order, InodataFloraBundle:DistributionAdmin ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
    admin.order:
        class: Inodata\FloraBundle\Admin\OrderAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Pedidos, label: Pedidos }
        arguments: [ null, Inodata\FloraBundle\Entity\Order, InodataFloraBundle:OrderAdmin ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
            - [ setSecurityContext, [ @security.context ] ]
    admin.category:
        class: Inodata\FloraBundle\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Categorías }
        arguments: [ null, Inodata\FloraBundle\Entity\Category, SonataAdminBundle:CRUD ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
    admin.message:
        class: Inodata\FloraBundle\Admin\MessageAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Mensajes }
        arguments: [ null, Inodata\FloraBundle\Entity\Message, SonataAdminBundle:CRUD ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
    admin.paymentcontact:
        class: Inodata\FloraBundle\Admin\PaymentContactAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Contacto de pago }
        arguments: [ null, Inodata\FloraBundle\Entity\PaymentContact, SonataAdminBundle:CRUD ]
    admin.customer:
        class: Inodata\FloraBundle\Admin\CustomerAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Cliente }
        arguments: [ null, Inodata\FloraBundle\Entity\Customer, SonataAdminBundle:CRUD ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
    admin.address:
        class: Inodata\FloraBundle\Admin\AddressAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Dirección }
        arguments: [ null, Inodata\FloraBundle\Entity\Address, SonataAdminBundle:CRUD ]
    admin.partner:
        class: Inodata\FloraBundle\Admin\PartnerAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Proveedores }
        arguments: [ null, Inodata\FloraBundle\Entity\Partner, SonataAdminBundle:CRUD ]
    admin.employee:
        class: Inodata\FloraBundle\Admin\EmployeeAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Empleados }
        arguments: [ null, Inodata\FloraBundle\Entity\Employee, SonataAdminBundle:CRUD ]
    admin.product:
        class: Inodata\FloraBundle\Admin\ProductAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Productos }
        arguments: [ null, Inodata\FloraBundle\Entity\Product, SonataAdminBundle:CRUD ]
        calls: 
            - [ setTranslationDomain, [ 'InodataFloraBundle' ] ]
    admin.product_log:
        class: Inodata\FloraBundle\Admin\ProductLogAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Catálogos, label: Control de inventario}
        arguments: [ null, Inodata\FloraBundle\Entity\ProductLog, SonataAdminBundle:CRUD ]

    # KernelRequest listener
    extension.listener:
        class: Inodata\FloraBundle\Listener\DoctrineExtensionListener
        calls:
            - [ setContainer, [ @service_container ] ]
        tags:
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # Doctrine extensions
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]